/*

              ***Challenge 2***
              /**
 * Coded By : Medi W. Assumani
 * Language : Java
 * 
 *          DOCUMENTATION
 *          *************
 * This program finds the sum of the even-valued terms. Each new term in the Fibonacci sequence 
 
 is generated by adding the previous two terms.

By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued term

 * **/
import java.util.*;
import java.lang.Math;

public class Problem2{
    
    public static void main(String[] args){
        static const int LIMIT = 4000000;
        List<Integer>fibNumbers = fibSequence(limit);
        List<Integer>evenFib = getEvenNumbers(fibNumbers);
        System.out.println(getListSum(evenFib));

    }

    public static List<Integer> fibSequence(int limit){

        List<Integer> fibValues = new ArrayList<Integer>();

        int a = 0;
        int b = 1;
        int sum = 0;
        int count = 0;

        while(count < limit){
            
            sum = a + b;
            a = b;
            b = sum ;

            fibValues.add(sum);
            count++;
        }

        return fibValues;
    }
 
    public static List<Integer> getEvenNumbers(List<Integer> list){

        List<Integer> evenFib = new ArrayList<Integer>();
        for(int i = 0; i < list.size(); i++){

            if(list.get(i) % 2 == 0){
                evenFib.add(list.get(i));
            }
        }

        return evenFib;
    }

    public static long getListSum(List<Integer> list){
        
        long sum = 0;

        for(int i = 0; i < list.size(); i++){
            sum += list.get(i);
        }

        return sum;
    }
}
